<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "NetworkManager.(syncHistoryToServer(historyData : [[String : Any]], atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ()).(closure #1):NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value as [String: Any?]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo : [String : Any]) -&gt; ():ProfileVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainView.subviews">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NetworkManager.(syncHistoryToServer(historyData : [[String : Any]], atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ()).(closure #1).(closure #3):NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentUser.searchesHistory.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NetworkManager.syncHistoryToServer(historyData : String, atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ():NetworkManager.swift">
      </ContextState>
      <ContextState
         contextName = "HistorySearch.toJSON() -&gt; [String : Any]:HistorySearch.swift">
      </ContextState>
      <ContextState
         contextName = "Mapper.toJSONString(A, prettyPrint : Bool) -&gt; String?:Mapper.swift">
      </ContextState>
      <ContextState
         contextName = "NetworkManager.syncHistoryToServer(historyData : [String : Any?], atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ():NetworkManager.swift">
      </ContextState>
      <ContextState
         contextName = "&lt;- infix&lt;A where ...&gt; (inout A.Object, (Map, A)) -&gt; ():TransformOperators.swift">
      </ContextState>
      <ContextState
         contextName = "HistorySearch.init(type : HistorySearchType, flight : FlightHistorySearch?, hotel : HotelHistorySearch?) -&gt; HistorySearch:HistorySearch.swift">
      </ContextState>
      <ContextState
         contextName = "Mapper.map(JSONObject : Any?) -&gt; A?:Mapper.swift">
      </ContextState>
      <ContextState
         contextName = "HistorySearch.mapping(map : Map) -&gt; ():HistorySearch.swift">
         <PersistentStrings>
            <PersistentString
               value = "createTimeText">
            </PersistentString>
            <PersistentString
               value = "createTime">
            </PersistentString>
            <PersistentString
               value = "map.JSON[&quot;createTime&quot;] as String">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.(viewWillAppear(Bool) -&gt; ()).(closure #1).(closure #1):FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.historyList.count">
            </PersistentString>
            <PersistentString
               value = "searchesHistory.count">
            </PersistentString>
            <PersistentString
               value = "self.unSyncHistoryList[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.(signInUsingAccessToken(accessToken : String, atAPI : String) -&gt; ()).(closure #1):ProfileVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value as [String : String]">
            </PersistentString>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static DataRequest.(ObjectMapperSerializer&lt;A where ...&gt; (String?, mapToObject : A?, context : MapContext?) -&gt; DataResponseSerializer&lt;A&gt;).(closure #1):AlamofireObjectMapper.swift">
      </ContextState>
      <ContextState
         contextName = "NetworkManager.(syncHistoryToServer(historyData : [String : Any?], atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ()).(closure #1):NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChangePasswordVC.(saveButtonPressed(AnyObject) -&gt; ()).(closure #1):ChangePasswordVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentUser[&quot;message&quot;] as String">
            </PersistentString>
            <PersistentString
               value = "response.result.value as NSDictionary">
            </PersistentString>
            <PersistentString
               value = "currentUser">
            </PersistentString>
            <PersistentString
               value = "response.result.value as? [String: Any]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.(setUpMainView() -&gt; ()).(closure #1):ProfileVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result">
            </PersistentString>
            <PersistentString
               value = "avatarURL">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Map.subscript.getter:Map.swift">
         <PersistentStrings>
            <PersistentString
               value = "object as [String: Any]">
            </PersistentString>
            <PersistentString
               value = "isKeyPresent">
            </PersistentString>
            <PersistentString
               value = "currentValue as [String: Any]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "User.mapping(map : Map) -&gt; ():User.swift">
      </ContextState>
      <ContextState
         contextName = "ProfileVC.(signInWithFacebook() -&gt; ()).(closure #1):ProfileVC.swift">
      </ContextState>
      <ContextState
         contextName = "ProfileVC.(signInUsingAccessToken(accessToken : String, atAPI : String, withPreLink : String) -&gt; ()).(closure #1):ProfileVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result">
            </PersistentString>
            <PersistentString
               value = "response.result.value as? [String:Any]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SignInVC.(signInButtonPressed(AnyObject) -&gt; ()).(closure #1):SignInVCViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.header">
            </PersistentString>
            <PersistentString
               value = "currentUser as! [String: Any]">
            </PersistentString>
            <PersistentString
               value = "value as! [String: Any]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchVC.saveSearchingInfoIntoHistory() -&gt; ():FlightSearchVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "passengerInfo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.viewDidLoad() -&gt; ():FlightSearchHistoryVC.swift">
      </ContextState>
      <ContextState
         contextName = "UIImage.init(fromHex : UnsafePointer&lt;Int8&gt;) -&gt; UIImage:Extentions.swift">
         <PersistentStrings>
            <PersistentString
               value = "textlabel.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NetworkManager.syncHistoryToServer(historyData : [[String : Any]], atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ():NetworkManager.swift">
      </ContextState>
      <ContextState
         contextName = "ListTransform.transformFromJSON(Any?) -&gt; List&lt;A&gt;?:ListTransform.swift">
         <PersistentStrings>
            <PersistentString
               value = "value ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -&gt; Never:(null)">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SignUpVC.signUpButtonPressed(AnyObject) -&gt; ():SignUpVC.swift">
      </ContextState>
      <ContextState
         contextName = "EditProfileVC.(saveButtonPressed(AnyObject) -&gt; ()).(closure #3):EditProfileVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.viewWillAppear(Bool) -&gt; ():FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "unSyncHistoryList.count">
            </PersistentString>
            <PersistentString
               value = "unSyncHistoryList[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UICheckBoxButton.selfPressed(sender : AnyObject) -&gt; ():UICheckBoxButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "checkBoxLabel.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.signInWithFacebook() -&gt; ():ProfileVC.swift">
      </ContextState>
      <ContextState
         contextName = "ProfileVC.signInUsingAccessToken(accessToken : String, atAPI : String) -&gt; ():ProfileVC.swift">
      </ContextState>
      <ContextState
         contextName = "UserInfoView.initializeSubviews() -&gt; ():UserInfoView.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.subviews.first.subviews">
            </PersistentString>
            <PersistentString
               value = "userAvatar.image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EditProfileVC.(tableView(UITableView, didSelectRowAt : IndexPath) -&gt; ()).(closure #1).(closure #1):EditProfileVC.swift">
      </ContextState>
      <ContextState
         contextName = "SignUpVC.(signUpButtonPressed(AnyObject) -&gt; ()).(closure #1):SignUpVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result">
            </PersistentString>
            <PersistentString
               value = "(response.result.value as! [String: Any])[&quot;message&quot;] as String">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TabBarController.(animateToTab(toIndex : Int, completion : () -&gt; ()?) -&gt; ()).(closure #2):TabBarController.swift">
         <PersistentStrings>
            <PersistentString
               value = "(tabViewControllers[toIndex] as! UINavigationController).popToRootViewController(animated: true)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.(viewWillAppear(Bool) -&gt; ()).(closure #1):FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.unSyncHistoryList.count">
            </PersistentString>
            <PersistentString
               value = "searchesHistory.count">
            </PersistentString>
            <PersistentString
               value = "self.historyList.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightHistorySearch.init(info : PassengerInfo, searchAt : Date?) -&gt; FlightHistorySearch:HistorySearch.swift">
      </ContextState>
      <ContextState
         contextName = "WarningForInput.hideWarning(animated : Bool) -&gt; ():WarningView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.inputTextField?.layer.borderColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "WarningView.initializeSubviews() -&gt; ():WarningView.swift">
      </ContextState>
      <ContextState
         contextName = "NetworkManager.(syncHistoryToServer(historyData : String, atView : UIViewController, completion : (Bool, List&lt;HistorySearch&gt;?) -&gt; ()?) -&gt; ()).(closure #1):NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Mapper.mapArray(JSONObject : Any?) -&gt; [A]?:Mapper.swift">
         <PersistentStrings>
            <PersistentString
               value = "JSONObject">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BaseMappable.init(JSON : [String : Any], context : MapContext?) -&gt; A?:Mappable.swift">
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.historyListToJSON() -&gt; String:FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "historyList[0].flightHistory">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChangNameVC.(saveButtonPressed(AnyObject) -&gt; ()).(closure #2):ChangNameVC.swift">
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.(tableView(UITableView, didSelectRowAt : IndexPath) -&gt; ()).(closure #2).(closure #1):FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "(self.tabBarController as? TabBarController)?.selectedViewController as? BaseViewController">
            </PersistentString>
            <PersistentString
               value = "resultVC.navigationController?">
            </PersistentString>
            <PersistentString
               value = "resultVC.isKind(of: FlightSearchHistoryVC.self)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HistoryCell.fillData(data : HistorySearch) -&gt; ():HistoryCell.swift">
      </ContextState>
      <ContextState
         contextName = "HistoryCell.fillDataForFlight(data : FlightHistorySearch) -&gt; ():HistoryCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "fromLabel.text">
            </PersistentString>
            <PersistentString
               value = "data.isRoundTrip">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FlightSearchHistoryVC.tableView(UITableView, didSelectRowAt : IndexPath) -&gt; ():FlightSearchHistoryVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "passengerInfo?.departDay?.compare(Date())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.signInUsingAccessToken(accessToken : String, atAPI : String, withPreLink : String) -&gt; ():ProfileVC.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
